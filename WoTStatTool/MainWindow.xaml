<Window x:Class="WotStatsTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WotStatsTool"
        xmlns:view="clr-namespace:WotStatsTool.View"
        xmlns:converters="clr-namespace:WotStatsTool.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="1200">
    <Window.Resources>
        <Style TargetType="{x:Type RadioButton}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="6">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <GroupBox Header="Check player" Grid.Row="0" Margin="0,0,0,3">
            <view:PlayerSelectView DataContext="{Binding Path=PlayerSelect}" Grid.ColumnSpan="3" Margin="3"/>
        </GroupBox>

        <Grid Grid.Row="1" Margin="0,3,0,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="175"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="175"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>


            <GroupBox Header="Expected values" Grid.Column="0" Grid.Row="1">
                <view:ExpectedValuesSelectorView DataContext="{Binding Path=ExpectedValueSelector}" Margin="3"/>
            </GroupBox>

            <GroupBox Grid.Column="2" Grid.Row="1">
                <GroupBox.Header>
                    <CheckBox Content="compare expected values" IsChecked="{Binding CompareExpectedValues}"/>
                </GroupBox.Header>

                <view:ExpectedValuesSelectorView DataContext="{Binding ExpectedValueSelector2}" Margin="3"
                                                     IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CompareExpectedValues}"/>
            </GroupBox>

            <GroupBox Grid.Row="1" Grid.Column="4">
                <GroupBox.Header>
                    <CheckBox Content="slider" IsChecked="{Binding ShowSlider}"/>
                </GroupBox.Header>
                <StackPanel>
                    <FrameworkElement x:Name="sliderVisibility" Visibility="{Binding ShowSlider, Converter={x:Static converters:BoolVisibilityConverter.Instance}}" />
                    <FrameworkElement x:Name="sliderVisibilityInverted" Visibility="{Binding ShowSlider, Converter={x:Static converters:BoolVisibilityConverter.Instance}, ConverterParameter=true}" />
                    <view:DisplayRangeSelectorView DataContext="{Binding Path=DisplayRangeSelector}" Visibility="{Binding Visibility, Source={x:Reference sliderVisibilityInverted}}" Margin="3"/>
                </StackPanel>
            </GroupBox>
        </Grid>

        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,0,0,6">
            <GroupBox Width="240">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Stats for "/>
                        <TextBlock x:Name="tbUsername" Text="Player X" FontWeight="Bold"/>
                    </StackPanel>
                </GroupBox.Header>

                <view:StatTotalsView Grid.Column="0" DataContext="{Binding Path=StatTotals}" Margin="3"/>
            </GroupBox>

            <GroupBox Header="Filter" Margin="6,0,0,0">
                <view:TankFilterView Grid.Column="2" DataContext="{Binding Path=TankFilter}" Margin="3"/>
            </GroupBox>

            <GroupBox Header="Display" Margin="6,0,0,0">
                <StackPanel Grid.Row="3" Margin="3">
                    <CheckBox Content="Show expected values" IsChecked="{Binding Path=ShowExpectedValues}"/>
                    <CheckBox Content="Show second expected values" IsChecked="{Binding Path=ShowCompareExpectedValues}"/>
                    <CheckBox Content="Show change in the expected values" IsChecked="{Binding Path=ShowDeltaExpectedValues}"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <!-- dummy to be able to bind visibility on DataGridTextColumn -->
        <FrameworkElement x:Name="expectedVisibility" Visibility="{Binding Path=ExpectedValuesVisibility}" />
        <FrameworkElement x:Name="compareVisibility" Visibility="{Binding Path=CompareValuesVisibility}" />
        <FrameworkElement x:Name="compareExpectedVisibility" Visibility="{Binding Path=CompareExpectedValuesVisibility}" />
        <FrameworkElement x:Name="deltaExpectedVisibility" Visibility="{Binding Path=DeltaExpectedValuesVisibility}" />
        
        <DataGrid x:Name="dgOverview" IsReadOnly="True" ItemsSource="{Binding Collection}" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                AutoGenerateColumns="False" AlternatingRowBackground="LightGray" HeadersVisibility="Column" Grid.Row="3" Margin="0,3,0,0"
                  HorizontalGridLinesBrush="SlateGray" VerticalGridLinesBrush="SlateGray">
            <DataGrid.Resources>
                <Style TargetType="TextBlock" x:Key="AlignRight">
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Style>
                <Style TargetType="DataGridCell" x:Key="HighlightPremium">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPremium}" Value="True">
                            <Setter Property="Foreground" Value="#FFBDA000"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Vehicle" Binding="{Binding Name}" Width="200" CellStyle="{StaticResource HighlightPremium}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="60"/>
                <DataGridTextColumn Header="Nation" Binding="{Binding Nation}" Width="120"/>
                <DataGridTextColumn Header="Tier" Binding="{Binding Tier, StringFormat=N0}" Width="40" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="MoE" Binding="{Binding MarksOnGun, StringFormat=N0}" Width="40" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Battles" Binding="{Binding Battles, StringFormat=N0}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="DPG" Binding="{Binding AvgDamage, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Spot" Binding="{Binding AvgSpotted, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="KPG" Binding="{Binding AvgFrags, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Cap" Binding="{Binding AvgCap, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Decap" Binding="{Binding AvgDecap, StringFormat=N2}" Width="70" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Hitrate" Binding="{Binding Hitrate, StringFormat=P}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg XP" Binding="{Binding AvgExperience, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTemplateColumn Header="Winrate" SortMemberPath="Winrate" Width="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding Winrate, Converter={x:Static converters:WinrateColorConverter.Instance}}">
                                <TextBlock Text="{Binding Winrate, StringFormat=P2}" HorizontalAlignment="Right" Margin="3,0,3,0"
                                           Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType=Grid},
                                                                            Converter={x:Static converters:ForegroundColorConverter.Instance}}"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="WN8" SortMemberPath="WN8" Width="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding WN8, Converter={x:Static converters:Wn8ColorConverter.Instance}}">
                                <TextBlock Text="{Binding WN8, StringFormat=N0}" HorizontalAlignment="Right" Margin="3,0,3,0"
                                           Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType=Grid},
                                                                            Converter={x:Static converters:ForegroundColorConverter.Instance}}"/>
                            </Grid>                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="CoWN8" SortMemberPath="ComparisonWN8" Width="60"
                                        Visibility="{Binding Visibility, Source={x:Reference compareVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding ComparisonWN8, Converter={x:Static converters:Wn8ColorConverter.Instance}}">
                                <TextBlock Text="{Binding ComparisonWN8, StringFormat=N0}" HorizontalAlignment="Right" Margin="3,0,3,0"
                                           Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType=Grid},
                                                                            Converter={x:Static converters:ForegroundColorConverter.Instance}}"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Exp Frag" Binding="{Binding ExFrags, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTextColumn Header="Exp DPG" Binding="{Binding ExDamage, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTextColumn Header="Exp Spot" Binding="{Binding ExSpots, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTextColumn Header="Exp Decap" Binding="{Binding ExDefense, StringFormat=N2}" Width="70" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTextColumn Header="Exp Winrate" Binding="{Binding ExWinrate, StringFormat=P2}" Width="80" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTextColumn Header="Co exp Frag" Binding="{Binding CoFrags, StringFormat=N2}" Width="75" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference compareExpectedVisibility}}" />
                <DataGridTextColumn Header="Co exp DPG" Binding="{Binding CoDamage, StringFormat=N2}" Width="75" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference compareExpectedVisibility}}" />
                <DataGridTextColumn Header="Co exp Spot" Binding="{Binding CoSpots, StringFormat=N2}" Width="75" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference compareExpectedVisibility}}" />
                <DataGridTextColumn Header="Co exp Decap" Binding="{Binding CoDefense, StringFormat=N2}" Width="85" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference compareExpectedVisibility}}" />
                <DataGridTextColumn Header="Co exp Winrate" Binding="{Binding CoWinrate, StringFormat=P2}" Width="95" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference compareExpectedVisibility}}"/>
                <DataGridTemplateColumn Header="D exp Frag" SortMemberPath="DeltaFrags" Width="70" Visibility="{Binding Visibility, Source={x:Reference deltaExpectedVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="3,0,3,0" HorizontalAlignment="Right"
                                       Text="{Binding DeltaFrags, StringFormat=+#\,0.000;-#\,0.000;0.000}"
                                       Foreground="{Binding DeltaFrags, Converter={x:Static converters:DeltaForegroundConverter.Instance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="D exp DPG" SortMemberPath="DeltaDamage" Width="70" Visibility="{Binding Visibility, Source={x:Reference deltaExpectedVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="3,0,3,0" HorizontalAlignment="Right"
                                       Text="{Binding DeltaDamage, StringFormat=+#\,0.000;-#\,0.000;0.000}"
                                       Foreground="{Binding DeltaDamage, Converter={x:Static converters:DeltaForegroundConverter.Instance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="D exp Spot" SortMemberPath="DeltaSpots" Width="70" Visibility="{Binding Visibility, Source={x:Reference deltaExpectedVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="3,0,3,0" HorizontalAlignment="Right"
                                       Text="{Binding DeltaSpots, StringFormat=+#\,0.000;-#\,0.000;0.000}"
                                       Foreground="{Binding DeltaSpots, Converter={x:Static converters:DeltaForegroundConverter.Instance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="D exp Decap" SortMemberPath="DeltaDefense" Width="80" Visibility="{Binding Visibility, Source={x:Reference deltaExpectedVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="3,0,3,0" HorizontalAlignment="Right"
                                       Text="{Binding DeltaDefense, StringFormat=+#\,0.000;-#\,0.000;0.000}"
                                       Foreground="{Binding DeltaDefense, Converter={x:Static converters:DeltaForegroundConverter.Instance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="D exp Winrate" SortMemberPath="DeltaWinrate" Width="90" Visibility="{Binding Visibility, Source={x:Reference deltaExpectedVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="3,0,3,0" HorizontalAlignment="Right"
                                       Text="{Binding DeltaWinrate, StringFormat=+0.000%;-0.000%;0.000%}"
                                       Foreground="{Binding DeltaWinrate, Converter={x:Static converters:DeltaForegroundConverter.Instance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Frags" Width="60" Visibility="Collapsed">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding AvgFrags, StringFormat=N2}" HorizontalAlignment="Right" />
                                <TextBlock Text="{Binding ExFrags, StringFormat=N2}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                                <TextBlock Text="{Binding CoFrags, StringFormat=N2}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference compareVisibility}}" />
                                <TextBlock Text="{Binding DeltaFrags, StringFormat=+ 0.00;- 0.00;0}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference compareVisibility}}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar Grid.Row="4" Value="{Binding Progress}" Height="20" Minimum="0" Maximum="100"/>
    </Grid>
</Window>
